volumes:
  ckan_storage:
  solr_data:
  pip_cache:
  site_packages:

services:

  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    networks:
      - webnet
      - ckannet
    depends_on:
      ckan:
        condition: service_healthy
    ports:
      - "0.0.0.0:${NGINX_SSLPORT_HOST}:${NGINX_SSLPORT}"
    
  ckan:
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    networks:
      - ckannet
      - solrnet
      - redisnet
    env_file:
      - .env
    depends_on:
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000/api/action/status_show"]
      interval: 60s
      timeout: 10s
      retries: 3

  solr:
    networks:
      - solrnet
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    networks:
      - redisnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  tiles:
    container_name: ${MARTIN_CONTAINER_NAME}
    build:
      context: martin/
    platform: linux/amd64
    restart: unless-stopped
    volumes:
      - tiles_data:/tiles
    ports:
      - "0.0.0.0:${MARTIN_PORT_HOST}:3000"
    environment:
      - "DATABASE_URL=${CKAN_DATASTORE_READ_URL}"
    healthcheck:
      test: [ "CMD", "wget", "-qO", "/dev/null", "http://localhost:3000/solr/" ]

networks:
  webnet:
  ckannet:
  solrnet:
    internal: true
  redisnet:
    internal: true
